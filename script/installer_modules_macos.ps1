#Requires -Version 7.0

<#
.SYNOPSIS
    Script d'installation des modules PowerShell n√©cessaires pour macOS.

.DESCRIPTION
    Ce script installe automatiquement les modules PowerShell requis pour utiliser
    les scripts d'export des utilisateurs Microsoft Graph sur macOS.

.EXAMPLE
    .\installer_modules_macos.ps1
#>

# Configuration des couleurs
$Colors = @{
    Success = "Green"
    Warning = "Yellow"
    Error = "Red"
    Info = "Cyan"
    Header = "Magenta"
}

function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Color
}

function Install-RequiredModule {
    param(
        [string]$ModuleName,
        [string]$Description
    )
    
    Write-ColorOutput "üîç V√©rification du module $ModuleName..." $Colors.Info
    
    if (Get-Module -ListAvailable -Name $ModuleName) {
        Write-ColorOutput "‚úÖ Module $ModuleName d√©j√† install√©" $Colors.Success
        return $true
    }
    
    Write-ColorOutput "üì¶ Installation du module $ModuleName ($Description)..." $Colors.Info
    
    try {
        Install-Module -Name $ModuleName -Scope CurrentUser -Force -AllowClobber
        Write-ColorOutput "‚úÖ Module $ModuleName install√© avec succ√®s" $Colors.Success
        return $true
    }
    catch {
        Write-ColorOutput "‚ùå Erreur lors de l'installation du module $ModuleName : $($_.Exception.Message)" $Colors.Error
        return $false
    }
}

function Test-PowerShellVersion {
    $currentVersion = $PSVersionTable.PSVersion
    $requiredVersion = [Version]"7.0"
    
    Write-ColorOutput "üîç V√©rification de la version PowerShell..." $Colors.Info
    Write-ColorOutput "Version actuelle : $($currentVersion.ToString())" $Colors.Info
    
    if ($currentVersion -ge $requiredVersion) {
        Write-ColorOutput "‚úÖ Version PowerShell compatible" $Colors.Success
        return $true
    } else {
        Write-ColorOutput "‚ùå Version PowerShell incompatible. Version requise : 7.0+" $Colors.Error
        Write-ColorOutput "üí° Installez PowerShell Core 7.0 ou sup√©rieur avec : brew install --cask powershell" $Colors.Warning
        return $false
    }
}

function Test-macOSEnvironment {
    Write-ColorOutput "üçé V√©rification de l'environnement macOS..." $Colors.Info
    
    if ($IsMacOS -or $PSVersionTable.Platform -eq "Unix") {
        Write-ColorOutput "‚úÖ Environnement macOS d√©tect√©" $Colors.Success
        return $true
    } else {
        Write-ColorOutput "‚ö†Ô∏è Environnement non-macOS d√©tect√©" $Colors.Warning
        Write-ColorOutput "üí° Ce script est optimis√© pour macOS" $Colors.Info
        return $true  # On continue quand m√™me
    }
}

# Script principal
Write-ColorOutput "üçé INSTALLATION DES MODULES POWERSHELL POUR MACOS" $Colors.Header
Write-ColorOutput ("=" * 50) $Colors.Header

# V√©rifier l'environnement
Test-macOSEnvironment

# V√©rifier la version PowerShell
if (-not (Test-PowerShellVersion)) {
    Write-ColorOutput "‚ùå Installation interrompue" $Colors.Error
    exit 1
}

# Modules √† installer pour macOS
$modules = @(
    @{
        Name = "Microsoft.Graph"
        Description = "Module Microsoft Graph (recommand√© pour macOS)"
    },
    @{
        Name = "Microsoft.Graph.Users"
        Description = "Module Microsoft Graph Users"
    }
)

$allInstalled = $true

foreach ($module in $modules) {
    if (-not (Install-RequiredModule -ModuleName $module.Name -Description $module.Description)) {
        $allInstalled = $false
    }
}

Write-ColorOutput "" $Colors.Info
Write-ColorOutput ("=" * 50) $Colors.Header

if ($allInstalled) {
    Write-ColorOutput "‚úÖ TOUS LES MODULES INSTALL√âS AVEC SUCC√àS" $Colors.Success
    Write-ColorOutput "" $Colors.Info
    Write-ColorOutput "üéØ Vous pouvez maintenant utiliser le script d'export des utilisateurs :" $Colors.Info
    Write-ColorOutput "   .\export_utilisateurs_macos.ps1" $Colors.Info
    Write-ColorOutput "" $Colors.Info
    Write-ColorOutput "üí° Note : Sur macOS, Microsoft.Graph est recommand√© au lieu d'AzureAD" $Colors.Info
} else {
    Write-ColorOutput "‚ùå CERTAINS MODULES N'ONT PAS PU √äTRE INSTALL√âS" $Colors.Error
    Write-ColorOutput "üí° V√©rifiez les erreurs ci-dessus et r√©essayez" $Colors.Warning
    Write-ColorOutput "üí° Sur macOS, assurez-vous d'avoir PowerShell Core 7.0+" $Colors.Warning
}

Write-ColorOutput "" $Colors.Info
